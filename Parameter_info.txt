GLOBAL DISPLAY SETTINGS
AISOn 			Automatic Intensity  Switch(Ein/Aus)
AUS
	Display Intensity (%)
EIN
AISmin			Min(%)
AISmax			Max(%)


SETTINGS INSTANCE
ActionNo 		Action(Textmessage, Temperature, Humidifier, Light, Current Time, Current Date, Target Date, Countdown to Date, MQTT Topic, Nerd News, Animation: PacMan, Smiley, Bouncing Ball, etc.)
TextMessage 	Textstring (128 caracter)
TextSpeed		Speed (ms/frame)
TextDirection	Direction (left, right)
TextOrientation	Orientation (left, center, right)
DisplayTime		Time for action Parola=[pause] (ms)
InEffect 		(Nummern nach texteffect_t ( mit HTML OPT GROUP ))
OutEffect 		(Nummern nach texteffect_t ( mit HTML OPT GROUP ))
Countdown Start (min)
Pause 			[Zeit zwischen Animation)


  boolean AISOn; // Auto Intensity Sensor On (1=active)
  byte AISmin;  // AIS minimum level (0...15) 
  byte AISmax;  // AIS maximum level (0...15)
  byte DisplayIntensity; // static intensity level if AIS disabled (0...15)
  
  int ActionNo; // Display action (Textmessage, Temperature, Humidifier, Light, Current Time, Current Date, Target Date, Countdown to Date, MQTT Topic, Nerd News, Animation: PacMan, Smiley, Bouncing Ball, etc.)
  String Textmessage;
  int  TextSpeed; // Speed (ms/frame)
  boolean TextDirection; // Direction (0=left, 1=right)
  int TextOrientation; // Text Orientation (1=left, 2=center, 3=right)
  long DisplayTime; // Time for action Parola=[pause] (ms)
  long NextTime; // Blank time to begin next action (ms) 
  byte InEffect; // Incoming text effect (see numbers of texteffect_t)
  byte OutEffect; // Fadeout text effect (see numbers of texteffect_t)
  byte CountTime; // Counter time unit to calculate target date (1=seconds, 2=minutes, 3=hours, 4=days)
  byte DateYear; // Target Date Year
  byte DateMonth; // Target Date Month
  byte DateDay; // Target Date Day
  byte DateHour; // Target Date Hour
  byte DateMinute; // Target Date Minute

  String MQTTtopic; // MQTT Topic to subscribe
  String MQTThost; // MQTT broker host
  String MQTTuser; // MQTT User data
  String MQTTpwd; // MQTT Password data
  String MQTTport; // MQTT Port
  boolean MQTTssl; // SSL active (1=active) 
  String MQTTsslport; // MQTT SSL Port  
  String MQTTwebsport; //Websockets port (for TSL only)